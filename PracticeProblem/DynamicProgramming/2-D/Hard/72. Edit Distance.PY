
class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        cache = [[float('inf')] * (len(word2) + 1) for _ in range(len(word1) + 1)]
        # bottom base case
        for j in range(len(word2) + 1):
            cache[len(word1)][j] = len(word2) - j

        # right base case
        for i in range(len(word1) + 1):
            cache[i][len(word2)]= len(word1) - i

        for i in range(len(word1)-1,-1,-1):
            for j in range(len(word2)-1,-1,-1):
                if word1[i] == word2[j]:
                    cache[i][j] = cache[i + 1][j + 1] 
                else:
                    cache[i][j] = 1 + min(cache[i + 1][j],cache[i][j + 1],cache[i + 1][j + 1])

        return cache[0][0]



s = Solution()
print(s.minDistance(word1 = "abd", word2 = "acd"))
print(s.minDistance(word1 = "intention", word2 = "execution"))

    